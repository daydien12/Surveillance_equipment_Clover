/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_I2C_H
#define _MOCK_I2C_H

#include "unity.h"
#include "i2c.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_i2c_Init(void);
void mock_i2c_Destroy(void);
void mock_i2c_Verify(void);




#define I2C_Init_Ignore() I2C_Init_CMockIgnore()
void I2C_Init_CMockIgnore(void);
#define I2C_Init_StopIgnore() I2C_Init_CMockStopIgnore()
void I2C_Init_CMockStopIgnore(void);
#define I2C_Init_Expect(Speed) I2C_Init_CMockExpect(__LINE__, Speed)
void I2C_Init_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t Speed);
typedef void (* CMOCK_I2C_Init_CALLBACK)(uint32_t Speed, int cmock_num_calls);
void I2C_Init_AddCallback(CMOCK_I2C_Init_CALLBACK Callback);
void I2C_Init_Stub(CMOCK_I2C_Init_CALLBACK Callback);
#define I2C_Init_StubWithCallback I2C_Init_Stub
#define I2C_Start_Ignore() I2C_Start_CMockIgnore()
void I2C_Start_CMockIgnore(void);
#define I2C_Start_StopIgnore() I2C_Start_CMockStopIgnore()
void I2C_Start_CMockStopIgnore(void);
#define I2C_Start_Expect() I2C_Start_CMockExpect(__LINE__)
void I2C_Start_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_I2C_Start_CALLBACK)(int cmock_num_calls);
void I2C_Start_AddCallback(CMOCK_I2C_Start_CALLBACK Callback);
void I2C_Start_Stub(CMOCK_I2C_Start_CALLBACK Callback);
#define I2C_Start_StubWithCallback I2C_Start_Stub
#define I2C_Stop_Ignore() I2C_Stop_CMockIgnore()
void I2C_Stop_CMockIgnore(void);
#define I2C_Stop_StopIgnore() I2C_Stop_CMockStopIgnore()
void I2C_Stop_CMockStopIgnore(void);
#define I2C_Stop_Expect() I2C_Stop_CMockExpect(__LINE__)
void I2C_Stop_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_I2C_Stop_CALLBACK)(int cmock_num_calls);
void I2C_Stop_AddCallback(CMOCK_I2C_Stop_CALLBACK Callback);
void I2C_Stop_Stub(CMOCK_I2C_Stop_CALLBACK Callback);
#define I2C_Stop_StubWithCallback I2C_Stop_Stub
#define I2C_Write_Ignore() I2C_Write_CMockIgnore()
void I2C_Write_CMockIgnore(void);
#define I2C_Write_StopIgnore() I2C_Write_CMockStopIgnore()
void I2C_Write_CMockStopIgnore(void);
#define I2C_Write_Expect(data) I2C_Write_CMockExpect(__LINE__, data)
void I2C_Write_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t data);
typedef void (* CMOCK_I2C_Write_CALLBACK)(uint8_t data, int cmock_num_calls);
void I2C_Write_AddCallback(CMOCK_I2C_Write_CALLBACK Callback);
void I2C_Write_Stub(CMOCK_I2C_Write_CALLBACK Callback);
#define I2C_Write_StubWithCallback I2C_Write_Stub
#define I2C_Write_add_Ignore() I2C_Write_add_CMockIgnore()
void I2C_Write_add_CMockIgnore(void);
#define I2C_Write_add_StopIgnore() I2C_Write_add_CMockStopIgnore()
void I2C_Write_add_CMockStopIgnore(void);
#define I2C_Write_add_Expect(data, mode) I2C_Write_add_CMockExpect(__LINE__, data, mode)
void I2C_Write_add_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t data, uint8_t mode);
typedef void (* CMOCK_I2C_Write_add_CALLBACK)(uint8_t data, uint8_t mode, int cmock_num_calls);
void I2C_Write_add_AddCallback(CMOCK_I2C_Write_add_CALLBACK Callback);
void I2C_Write_add_Stub(CMOCK_I2C_Write_add_CALLBACK Callback);
#define I2C_Write_add_StubWithCallback I2C_Write_add_Stub
#define I2C_Read_NAK_IgnoreAndReturn(cmock_retval) I2C_Read_NAK_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void I2C_Read_NAK_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define I2C_Read_NAK_StopIgnore() I2C_Read_NAK_CMockStopIgnore()
void I2C_Read_NAK_CMockStopIgnore(void);
#define I2C_Read_NAK_ExpectAndReturn(cmock_retval) I2C_Read_NAK_CMockExpectAndReturn(__LINE__, cmock_retval)
void I2C_Read_NAK_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_I2C_Read_NAK_CALLBACK)(int cmock_num_calls);
void I2C_Read_NAK_AddCallback(CMOCK_I2C_Read_NAK_CALLBACK Callback);
void I2C_Read_NAK_Stub(CMOCK_I2C_Read_NAK_CALLBACK Callback);
#define I2C_Read_NAK_StubWithCallback I2C_Read_NAK_Stub
#define I2C_Read_ACK_IgnoreAndReturn(cmock_retval) I2C_Read_ACK_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void I2C_Read_ACK_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define I2C_Read_ACK_StopIgnore() I2C_Read_ACK_CMockStopIgnore()
void I2C_Read_ACK_CMockStopIgnore(void);
#define I2C_Read_ACK_ExpectAndReturn(cmock_retval) I2C_Read_ACK_CMockExpectAndReturn(__LINE__, cmock_retval)
void I2C_Read_ACK_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_I2C_Read_ACK_CALLBACK)(int cmock_num_calls);
void I2C_Read_ACK_AddCallback(CMOCK_I2C_Read_ACK_CALLBACK Callback);
void I2C_Read_ACK_Stub(CMOCK_I2C_Read_ACK_CALLBACK Callback);
#define I2C_Read_ACK_StubWithCallback I2C_Read_ACK_Stub
#define I2C_Read_arr_IgnoreAndReturn(cmock_retval) I2C_Read_arr_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void I2C_Read_arr_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t cmock_to_return);
#define I2C_Read_arr_StopIgnore() I2C_Read_arr_CMockStopIgnore()
void I2C_Read_arr_CMockStopIgnore(void);
#define I2C_Read_arr_ExpectAndReturn(cmock_retval) I2C_Read_arr_CMockExpectAndReturn(__LINE__, cmock_retval)
void I2C_Read_arr_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t cmock_to_return);
typedef uint16_t (* CMOCK_I2C_Read_arr_CALLBACK)(int cmock_num_calls);
void I2C_Read_arr_AddCallback(CMOCK_I2C_Read_arr_CALLBACK Callback);
void I2C_Read_arr_Stub(CMOCK_I2C_Read_arr_CALLBACK Callback);
#define I2C_Read_arr_StubWithCallback I2C_Read_arr_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
